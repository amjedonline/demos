<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>handling text</title>
  <text xml:space="preserve"><note-content version="0.1">handling text 

'text', "text", """text""",'''text''' are all same, except the triple quotes and doubles quotes enables to take new lines caracters.

<bold>Raw string</bold> ml
<list><list-item dir="ltr">Does not interpret the escape sequences
</list-item><list-item dir="ltr">Append with r
</list-item><list-item dir="ltr">r"this \n newline character"
</list-item><list-item dir="ltr">It adds </list-item></list>


<bold>__repr__</bold>
When object representation is needed, this is the method called to display the object in the command line.

<bold>__str__</bold>
Called when explicit print object is done



<link:internal>find</link:internal>(substr)"
index(substr)	- throws ValueError if substring is not found
startswith()
endswith()

These methods take one argument, string of character occurrence of who should be stripped
strip()
lstrip()
rstrip()
xml_tag="&lt;start&gt;"
xml_tag.strip("&lt;&gt;") - this ll strip off the &gt; and &lt;
lower()
upper()
split(char,max_split) - defaul to space char
splitlines()

join(some_list_of_strings) - ",".join(["here","is","a","list"])

some_list=range(10)
",".join(some_list) - This fails
",".join([str(i) for i in some_list])

<bold>replace(pattern, with_text) </bold>


UTF-8 is a common encoding for Unicode data.</note-content></text>
  <last-change-date>2010-06-30T19:05:56.3456480+02:00</last-change-date>
  <last-metadata-change-date>2010-08-11T18:29:49.8740110+02:00</last-metadata-change-date>
  <create-date>2010-06-30T18:25:12.7474220+02:00</create-date>
  <cursor-position>787</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:python</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>