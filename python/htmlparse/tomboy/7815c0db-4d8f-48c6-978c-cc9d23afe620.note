<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Security - Access system</title>
  <text xml:space="preserve"><note-content version="0.1">Security - Access system

Resource based access control.

Two things:
1. Privilege
2. On Resource

<bold>Privilege</bold>:
Could be CRUD, which cleanly maps to the REST.

<bold>Resource:</bold>
Could be Space, Document, System.
Even the abstract concepts like session could be resource, where login is a CREATE Operation.

If a user has CREATE Privilege on Session Resource, then he can login.

<bold>Advantages:</bold>
This way you can cleanly map CRUD to REST even outside the application core.
Define Policies which cross <link:internal>cut</link:internal> the application access.
Define custom policies without much change in the application architecture
Define usage polices like
Max number of logins
Max number of space accesses.

<bold>Other keywords</bold>
Policy table
</note-content></text>
  <last-change-date>2010-11-22T14:29:12.6419070+05:30</last-change-date>
  <last-metadata-change-date>2010-11-22T14:29:12.6419070+05:30</last-metadata-change-date>
  <create-date>2010-11-22T14:25:13.3106930+05:30</create-date>
  <cursor-position>41</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:Tech junks</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>