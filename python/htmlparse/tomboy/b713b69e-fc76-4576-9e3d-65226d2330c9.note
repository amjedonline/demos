<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>ServiceContext in liferay</title>
  <text xml:space="preserve"><note-content version="0.1">ServiceContext in liferay

The Service Context is an object that contains context information about a given API call. By using this pattern it is possible to consolidate many different methods with different sets of optional parameters into a single, easier to use method. It also aggregates information necessary for transversal features such as permissioning, tagging, categorization, etc.


<bold><size:large>Significant Fields:</size:large></bold>
boolean addCommunityPermissions;
boolean addGuestPermissions;
Map&lt;String, Serializable&gt; attributes;
String[] communityPermissions;
long companyId;
Map&lt;String, Serializable&gt; expandoBridgeAttributes;
String[] guestPermissions;
String languageId;
String layoutURL;
String pathMain;
String portalURL;
PortletPreferencesIds portletPreferencesIds;
long scopeGroupId;
String[] tagsCategories;
String[] tagsEntries;
String userDisplayURL;
long plid;
long userId;<strikethrough>

</strikethrough><bold>Usage 1:</bold>
ServiceContext serviceContext = new ServiceContext();
serviceContext.setScopeGroupId(myGroupId);

BlogsEntryServiceUtil.addEntry(...., serviceContext)


<bold>Usage 2:</bold>
ServiceContext serviceContext = ServiceContextFactory.getInstance(BlogsEntry.class.getName(), portletRequest);

BlogsEntryServiceUtil.addEntry(..., serviceContext);</note-content></text>
  <last-change-date>2011-03-18T16:21:44.7328200+01:00</last-change-date>
  <last-metadata-change-date>2011-03-21T15:23:02.0828490+01:00</last-metadata-change-date>
  <create-date>2011-03-17T17:18:25.6064150+01:00</create-date>
  <cursor-position>692</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:Liferay</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>