<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Backing up MySQL</title>
  <text xml:space="preserve"><note-content version="0.1">Backing up MySQL

Restore faster ?
How frequent backup ?
Media to backup ?

<bold>To backup large (4 GB) <link:internal>MySQL</link:internal></bold><bold> <link:internal>databases</link:internal></bold><bold>:</bold>

Use a cron <link:internal>job</link:internal> every night that mysqldumps everything and keep 3 days of backups.


<bold>Backing up around 90 GB of data:</bold>
<list><list-item dir="ltr">You can try the following call: mysqldump -u USER -pPASS --single-transaction -Q --<link:internal>databases</link:internal> foo bar (Use the docs to check if those switches work for you.)
</list-item><list-item dir="ltr">If you use MYISAM-tables only, then copying the database to <link:internal>another</link:internal> drive and tar'ing it, might also be an alternative. This will not work with INNODB though, since it keeps an additional file. Also, you have to test this carefully.
</list-item><list-item dir="ltr">Enable binary logs, and back them up. (This is probably my favorite!)
</list-item><list-item dir="ltr">Setup replication and to do the backup on one of your slaves, and then let it catch up with the rest. It's pretty nice when it runs, but the problem is getting it running. Replicating is no fun with <link:internal>MySQL</link:internal>. :(
</list-item><list-item dir="ltr">Does your filesystem support snapshots? If it does, then that is a great opportunity to use them.
</list-item><list-item dir="ltr">Use a commercial solution, such as Amanda.</list-item></list>



<bold>Other methods</bold>

<bold>one</bold>
The best way would be without interrupting normal operation. For high-reliability, fault-tolerant systems, you have 2 DBs that are kept in sync, and you backup the secondary. (eg this howtoforge article)

Otherwise, read the manual: use myseldump as you currently do, or use the mysqlhotcopy script (use just like mysqldump), or stop the DB and simply copy the frm, MID, MYI files (using <link:internal>rsync</link:internal>).

I think the stop+copy files mechanism is the fastest you're going to get.


<bold>Two</bold>
To answer your question - extended_insert option works good for me. If you have enough resources for restoring, extended_insert will insert huge chunks of data in a single query, making the restore faster.</note-content></text>
  <last-change-date>2011-03-28T11:52:03.0263490+02:00</last-change-date>
  <last-metadata-change-date>2012-02-02T10:45:00.6675680+01:00</last-metadata-change-date>
  <create-date>2010-12-21T06:46:01.6921420+01:00</create-date>
  <cursor-position>75</cursor-position>
  <selection-bound-position>75</selection-bound-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:Maintenance &amp; Monitoring</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>