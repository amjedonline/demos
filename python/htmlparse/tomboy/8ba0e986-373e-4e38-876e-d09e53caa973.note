<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>shell script</title>
  <text xml:space="preserve"><note-content version="0.1">shell script

cat 19.owl |<link:internal>cut</link:internal> -f1 -d " "|<link:internal>cut</link:internal> -f1- -d "/" --output-delimiter " "


<bold>: builtin</bold>

: is a bash builtin for no-op, it returns true

while :
do
	# infinite no of times
done

same as while true; do # ope ;done


<bold>Creating an empty file</bold>
: &gt; empty
touch empty 
and cat <link:url>/dev/null</link:url> &gt; empty

has same effect, but : &gt; does not fork a new <link:internal>process</link:internal>, as it is a shell builtin


<bold>Braces expansion</bold>
<bold>1.{,}</bold>
In <link:internal>Ubuntu</link:internal>'s default shell, <link:url>/bin/dash</link:url>
{one,two} are not expanded as one two, unlike bash
<bold>2.{..}</bold> - extended braces expansion
echo {1..9}


<bold>{} Grouping</bold>
{a=123;} echo $a; #var declared in are visible in the remainder script
Basically used for I/O redirection for commands in the braces.
Ex: 
FILE=/etc/fstab
{
read line1
read line2
} &lt; $FILE

echo $line1
echo $line2

<bold>{} \;</bold>
Ends the exec option of a <link:internal>find</link:internal> command <link:internal>sequence</link:internal>

<bold>[] and [[]]</bold> are synonyms to test
<list><list-item dir="ltr">need a space between [ and expression and ]
</list-item><list-item dir="ltr">need a space between each element in the expression</list-item></list>

<bold>Arrays</bold>
Array=(1 2 3 4) # Notice no comma separator, just the () and space delimited, array elements
echo ${Array[1]}

<bold>Exit status</bold>
0 - successful, no errors
1-255 error codes
default exit is exit $? (in a script, the last command)


exit is exit $?


<bold>Deleting the files in s3</bold>

for file in `s3cmd <link:internal>ls</link:internal> s3://semgel-bucket/| <link:internal>grep</link:internal> 'node-server\.' | awk '{print $NF}' `; do echo "deleting $file"; s3cmd del $file; done


Each script should be simple and useful alone, but when combined together they become extremely powerful.</note-content></text>
  <last-change-date>2010-11-03T17:31:48.0265830+05:30</last-change-date>
  <last-metadata-change-date>2010-11-03T17:31:48.0265830+05:30</last-metadata-change-date>
  <create-date>2010-01-03T01:36:03.1269410+05:30</create-date>
  <cursor-position>1360</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:Shell notes</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>