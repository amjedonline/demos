<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Liferay in Action</title>
  <text xml:space="preserve"><note-content version="0.1">Liferay in Action


<bold><size:large><link:internal>Service builder</link:internal></size:large></bold><bold><size:large> :</size:large></bold>

We define two foreign keys : 
a companyId and 
a groupId. 

These fields are internal to Liferay, and are used for context purposes in non-instanceable portlets. 
The<bold> companyId</bold> corresponds to the portal to which the user has navigated, and 
the <bold>groupId</bold> corresponds to the community or organization to which the user has navigated. 


May be we need portletId if the portlet is <bold>instanceable </bold>?


<bold>Interface and Implementation layers:</bold>
<link:internal>Service Builder</link:internal> divides the source it generates into<bold> two layers</bold>: an interface layer and an
implementation layer. The interface layer gets generated in the aforementioned service
folder. You will never change anything in the interface layer manually; <link:internal>Service Builder</link:internal> always
generates the code that is found there. The implementation layer gets generated in your src
folder and is initially just skeleton code which allows you to implement the functionality you
need.

<bold>service.properties:</bold>
properties that <link:internal>Service Builder</link:internal> needs at runtime in order to perform its <link:internal>functions</link:internal>. The most
<link:internal>important</link:internal> of these properties is a list of Spring configuration files which were also generated.

<bold>META-INF:</bold>
This folder contains all of the <bold>XML configuration files</bold> that <link:internal>Service Builder</link:internal> needs, including
Spring configuration files and Hibernate configuration



<bold>Counter</bold> is injected into the class we're working on, automatically. 
counteLocalService.increment(PRProduct.class.getName())


<bold>resourceLocalService</bold> to persist resources.
Resources are used to define permissions on objects that are persisted.


<bold>remember</bold> 
Use companyId and groupId to make the portlet non-instanceable.
This is how Liferay allows you to place, for example, a Message Boards portlet in <italic>two
different communities</italic>, and have completely different content in them.



</note-content></text>
  <last-change-date>2011-03-21T01:00:53.9780260+01:00</last-change-date>
  <last-metadata-change-date>2011-03-21T15:23:02.4422110+01:00</last-metadata-change-date>
  <create-date>2011-03-20T21:54:07.0290640+01:00</create-date>
  <cursor-position>1786</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>0</x>
  <y>0</y>
  <tags>
    <tag>system:notebook:Liferay</tag>
  </tags>
  <open-on-startup>False</open-on-startup>
</note>