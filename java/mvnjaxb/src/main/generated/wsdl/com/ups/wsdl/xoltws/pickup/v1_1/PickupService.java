
/*
 * 
 */

package com.ups.wsdl.xoltws.pickup.v1_1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2013-09-10T13:02:05.928+02:00
 * Generated source version: 2.3.3
 * 
 */


@WebServiceClient(name = "PickupService", 
                  wsdlLocation = "file:/Users/admin/Ent/workspace/mvnjaxb/src/main/resources/wsdl/Pickup.wsdl",
                  targetNamespace = "http://www.ups.com/WSDL/XOLTWS/Pickup/v1.1") 
public class PickupService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.ups.com/WSDL/XOLTWS/Pickup/v1.1", "PickupService");
    public final static QName PickupPort = new QName("http://www.ups.com/WSDL/XOLTWS/Pickup/v1.1", "PickupPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/admin/Ent/workspace/mvnjaxb/src/main/resources/wsdl/Pickup.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/admin/Ent/workspace/mvnjaxb/src/main/resources/wsdl/Pickup.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public PickupService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PickupService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PickupService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PickupService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PickupService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PickupService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PickupPortType
     */
    @WebEndpoint(name = "PickupPort")
    public PickupPortType getPickupPort() {
        return super.getPort(PickupPort, PickupPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PickupPortType
     */
    @WebEndpoint(name = "PickupPort")
    public PickupPortType getPickupPort(WebServiceFeature... features) {
        return super.getPort(PickupPort, PickupPortType.class, features);
    }

}
